
type Schedule {
    projectName: String!
    projectID: String!
    project: Project!
    begin: Time
    end: Time
    projectActivityWeeks: [ProjectActivityWeek!]
    exceptions: [ScheduleException!]
}

type ProjectActivityWeek {
    weekNumber: Int!
    year: Int!
    begin: Time!
    end: Time!
    activities: [ProjectActivity!]
}

type ProjectActivity {
	milestoneID: String
	milestoneName: String
	taskID: String
	taskName: String
    resourceID: String!
    resource: Resource
	hoursSpent: Int
}

type ScheduleException {
    level: Int!
    type: String!
    scope: String!
    message: String!
}


type ProjectScheduleResult {
    schedule: Schedule!
}


type ResourceAllocationMap {
    WeekActivities: [ResourceProjectHourAllocation]
}

type ResourceProjectHourAllocation {
    weekNumber: Int!
    year: Int!
    begin: Time!
    end: Time!   
    projectID: String!                 
	Project: Project!
    resourceID: String!
	Resource: Resource!
	TotalResourceHours: Int!
	HoursAvailableForProject: Int!
	Contention: Int!
}