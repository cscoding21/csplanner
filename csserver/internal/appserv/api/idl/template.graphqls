type Projecttemplate {
  id: String!
  description: String!
  name: String!
  phases: [ProjecttemplatePhase!]!
}

type ProjecttemplatePhase {
  id: String!
  name: String!
  order: Int!
  description: String!
  tasks: [ProjectTemplateTask!]
}

type ProjectTemplateTask {
  name: String!
  description: String
  requiredSkillID: String
} 

type ProjecttemplateResults {
  paging: Pagination
  filters: Filters!
  results: [Projecttemplate!]
}


input UpdateProjectMilestoneTemplate {
  projectId: String!
  templateId: String!
}


input UpdateProjecttemplate {
  id: String
  description: String!
  name: String!
  phases: [UpdateProjecttemplatePhase!]!
}

input UpdateProjecttemplatePhase {
  id: String
  name: String!
  order: Int!
  description: String!
  tasks: [UpdateProjectTemplateTask!]
}

input UpdateProjectTemplateTask {
  id: String
  name: String!
  description: String
  requiredSkillID: String
} 

type CreateProjectTemplateResult {
  status: Status!
  template: Projecttemplate
}