global:
  # enabled is the master enabled switch. Setting this to true or false
  # will enable or disable all the components within this chart by default.
  enabled: true

  # # This configures the Vault Statefulset to create a PVC for data
  # # storage when using the file or raft backend storage engines.
  # # See https://developer.hashicorp.com/vault/docs/configuration/storage to know more
  # dataStorage:
  #   enabled: true
  #   # Size of the PVC created
  #   size: 10Gi
  #   # Location where the PVC will be mounted.
  #   mountPath: "/mnt/data/vault/data"
  #   # Name of the storage class to use.  If null it will use the
  #   # configured default Storage Class.
  #   storageClass: local-disk
  #   # Access Mode of the storage device being used for the PVC
  #   accessMode: ReadWriteOnce
  #   # Annotations to apply to the PVC
  #   annotations: {}
  #   # Labels to apply to the PVC
  #   labels: {}

  # # Persistent Volume Claim (PVC) retention policy
  # # ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#persistentvolumeclaim-retention
  # # Example:
  # # persistentVolumeClaimRetentionPolicy:
  # #   whenDeleted: Retain
  # #   whenScaled: Retain
  # persistentVolumeClaimRetentionPolicy: {}

  # # This configures the Vault Statefulset to create a PVC for audit
  # # logs.  Once Vault is deployed, initialized, and unsealed, Vault must
  # # be configured to use this for audit logs.  This will be mounted to
  # # /vault/audit
  # # See https://developer.hashicorp.com/vault/docs/audit to know more
  # auditStorage:
  #   enabled: false
  #   # Size of the PVC created
  #   size: 10Gi
  #   # Location where the PVC will be mounted.
  #   mountPath: "/mnt/data/vault/audit"
  #   # Name of the storage class to use.  If null it will use the
  #   # configured default Storage Class.
  #   storageClass: local-disk
  #   # Access Mode of the storage device being used for the PVC
  #   accessMode: ReadWriteOnce
  #   # Annotations to apply to the PVC
  #   annotations: {}
  #   # Labels to apply to the PVC
  #   labels: {}

  standalone:
    enabled: "-"

    # config is a raw string of default configuration when using a Stateful
    # deployment. Default is to use a PersistentVolumeClaim mounted at /vault/data
    # and store data there. This is only used when using a Replica count of 1, and
    # using a stateful set. Supported formats are HCL and JSON.

    # Note: Configuration files are stored in ConfigMaps so sensitive data
    # such as passwords should be either mounted through extraSecretEnvironmentVars
    # or through a Kube secret. For more information see:
    # https://developer.hashicorp.com/vault/docs/platform/k8s/helm/run#protecting-sensitive-vault-configurations
    config: |-
      ui = true

      listener "tcp" {
        tls_disable = 1
        address = "[::]:8200"
        cluster_address = "[::]:8201"
        # Enable unauthenticated metrics access (necessary for Prometheus Operator)
        #telemetry {
        #  unauthenticated_metrics_access = "true"
        #}
      }
      storage "file" {
        path = "/mnt/data/vault"
      }

      # Example configuration for using auto-unseal, using Google Cloud KMS. The
      # GKMS keys must already exist, and the cluster must have a service account
      # that is authorized to access GCP KMS.
      #seal "gcpckms" {
      #   project     = "vault-helm-dev"
      #   region      = "global"
      #   key_ring    = "vault-helm-unseal-kr"
      #   crypto_key  = "vault-helm-unseal-key"
      #}

      # Example configuration for enabling Prometheus metrics in your config.
      #telemetry {
      #  prometheus_retention_time = "30s"
      #  disable_hostname = true
      #}

  # Run Vault in "dev" mode. This requires no further setup, no state management,
  # and no initialization. This is useful for experimenting with Vault without
  # needing to unseal, store keys, et. al. All data is lost on restart - do not
  # use dev mode for anything other than experimenting.
  # See https://developer.hashicorp.com/vault/docs/concepts/dev-server to know more
  dev:
    enabled: true

    # Set VAULT_DEV_ROOT_TOKEN_ID value
    devRootToken: "root"
